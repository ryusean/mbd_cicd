#Copyright 2021 The MathWorks, Inc.
# This .yml file corresponds to the child pipeline for the CruiseControlMode model

# defining the stages
stages:
  - Verify
  - Build
  - Testing
  - Package
  - Deploy

# This job executes the Model Advisor Check for the model
CruiseControlModeMA:
  stage: Verify
  tags:
    - testci
  script:
    - matlab -nodesktop -batch "openProject('CruiseControlExample.prj'); CruiseControlModeModelAdvisor;"
  artifacts:
    when: always
    paths:
      - $LOGS_PATH/logs/
      - ./Design/CruiseControlMode/pipeline/analyze/**/*

# This job performs code generation on the model
CruiseControlModeBuild:
  stage: Build
  tags:
    - testci
  script:
    - matlab -nodesktop -batch "openProject('CruiseControlExample.prj'); CruiseControlModeBuild;"
  artifacts:
    when: always
    paths:
      - ./Code/codegen/CruiseControlMode_ert_rtw
      - ./Design/CruiseControlMode/pipeline/analyze/**/*
      - $LOGS_PATH/logs/

# This job executes the unit tests defined in the collection
CruiseControlModeTest:
  stage: Testing
  tags:
    - testci
  script:
    - matlab -nodesktop -batch "openProject('CruiseControlExample.prj'); CruiseControlModeTest;"
  artifacts:
    when: always
    paths:
      - $LOGS_PATH/logs/
      - ./Design/CruiseControlMode/pipeline/analyze/**/*
      - ./Code/codegen/CruiseControlMode_ert_rtw
    reports:
      junit: ./Design/CruiseControlMode/pipeline/analyze/testing/CruiseControlModeJUnitFormatTestResults.xml

# The summary report is generated which shows results from the previous stages. Any logs that were generated in the previous stages will be cleared after this stage
CruiseControlModePackage:
  stage: Package
  tags:
    - testci
  script:
    - echo "The model CruiseControlMode has been checked"
    - echo "There is a Summary report generated cruiseControlModeReport.html "
    - matlab -nodesktop -batch "openProject('CruiseControlExample.prj'); generateXMLFromLogs('CruiseControlMode'); generateHTMLReport('CruiseControlMode'); deleteLogs;"
  artifacts:
    when: always
    paths:
      - ./Design/CruiseControlMode/pipeline/analyze/**/*
      - ./Code/codegen/CruiseControlMode_ert_rtw

# a stage to assert that all stages in this child pipeline have passed successfully.
# a deploy stage placeholder where all the artifacts are available for download
CruiseControlModeDeploy:
  stage: Deploy
  tags:
    - testci
  script:
    - echo "Any deployments of code can be made here"
    - echo "All artifacts of previous stage can be found here"
    - 'curl.exe --location --output "$ARTIFACTS_DOWNLOAD_PATH/CruiseControlModeArtifacts.zip" --header "PRIVATE-TOKEN: $CIPROJECTTOKEN" "$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=CruiseControlModePackage"'
  artifacts:
    when: always
    paths:
      - ./Design/CruiseControlMode/pipeline/analyze/**/*
      - ./Code/codegen/CruiseControlMode_ert_rtw
